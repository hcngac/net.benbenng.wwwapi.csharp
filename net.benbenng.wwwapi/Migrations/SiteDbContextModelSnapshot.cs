// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using net.benbenng.wwwapi;

namespace net.benbenng.wwwapi.Migrations
{
    [DbContext(typeof(SiteDbContext))]
    partial class SiteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("net.benbenng.wwwapi.Content", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<DateTime>("LastEditedTime");

                    b.Property<int?>("ProjectId");

                    b.Property<bool>("ShownInBlogs");

                    b.Property<string>("Text");

                    b.Property<string>("Title");

                    b.HasKey("ContentId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Contents");

                    b.HasData(
                        new { ContentId = 1, CreatedTime = new DateTime(2018, 8, 7, 13, 25, 7, 937, DateTimeKind.Local), LastEditedTime = new DateTime(2018, 8, 7, 13, 25, 7, 938, DateTimeKind.Local), ShownInBlogs = true, Text = "Hello World!", Title = "First Content" },
                        new { ContentId = 2, CreatedTime = new DateTime(2018, 8, 7, 13, 25, 7, 938, DateTimeKind.Local), LastEditedTime = new DateTime(2018, 8, 7, 13, 25, 7, 938, DateTimeKind.Local), ShownInBlogs = true, Text = "Hello World!", Title = "First Content" },
                        new { ContentId = 3, CreatedTime = new DateTime(2018, 8, 7, 13, 25, 7, 938, DateTimeKind.Local), LastEditedTime = new DateTime(2018, 8, 7, 13, 25, 7, 938, DateTimeKind.Local), ShownInBlogs = true, Text = "Hello World!", Title = "First Content" }
                    );
                });

            modelBuilder.Entity("net.benbenng.wwwapi.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description");

                    b.Property<bool>("Finished");

                    b.Property<string>("Title");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("net.benbenng.wwwapi.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContentId");

                    b.Property<string>("Name");

                    b.HasKey("TagId");

                    b.HasIndex("ContentId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("net.benbenng.wwwapi.Tagging", b =>
                {
                    b.Property<int>("TaggingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContentId");

                    b.Property<int?>("ProjectId");

                    b.Property<int?>("TagId");

                    b.HasKey("TaggingId");

                    b.HasIndex("ContentId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TagId");

                    b.ToTable("Taggings");
                });

            modelBuilder.Entity("net.benbenng.wwwapi.Content", b =>
                {
                    b.HasOne("net.benbenng.wwwapi.Project", "Project")
                        .WithMany("Updates")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("net.benbenng.wwwapi.Tag", b =>
                {
                    b.HasOne("net.benbenng.wwwapi.Content")
                        .WithMany("Tags")
                        .HasForeignKey("ContentId");
                });

            modelBuilder.Entity("net.benbenng.wwwapi.Tagging", b =>
                {
                    b.HasOne("net.benbenng.wwwapi.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId");

                    b.HasOne("net.benbenng.wwwapi.Project", "Project")
                        .WithMany("Taggings")
                        .HasForeignKey("ProjectId");

                    b.HasOne("net.benbenng.wwwapi.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");
                });
#pragma warning restore 612, 618
        }
    }
}
